{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\APK\\\\Desktop\\\\Web Projects\\\\PortfolioDesignRemastered\\\\portfolio-design\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\APK\\\\Desktop\\\\Web Projects\\\\PortfolioDesignRemastered\\\\portfolio-design\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";// ES6 Class\nvar TypeWriter=/*#__PURE__*/function(){function TypeWriter(txtElement,words){var wait=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3000;_classCallCheck(this,TypeWriter);this.txtElement=txtElement;this.words=words;this.txt='';this.wordIndex=0;this.wait=parseInt(wait,10);this.type();this.isDeleting=false;}_createClass(TypeWriter,[{key:\"type\",value:function type(){var _this=this;// Current index of word\nvar current=this.wordIndex%this.words.length;// Get full text of current word\nvar fullTxt=this.words[current];// Check if deleting\nif(this.isDeleting){// Remove char\nthis.txt=fullTxt.substring(0,this.txt.length-1);}else{// Add char\nthis.txt=fullTxt.substring(0,this.txt.length+1);}// Insert txt into element\nthis.txtElement.innerHTML=\"<span class=\\\"txt\\\">\".concat(this.txt,\"</span>\");// Initial Type Speed\nvar typeSpeed=200;if(this.isDeleting){typeSpeed/=2;}// If word is complete\nif(!this.isDeleting&&this.txt===fullTxt){// Make pause at end\ntypeSpeed=this.wait;// Set delete to true\nthis.isDeleting=true;}else if(this.isDeleting&&this.txt===''){this.isDeleting=false;// Move to next word\nthis.wordIndex++;// Pause before start typing\ntypeSpeed=500;}setTimeout(function(){return _this.type();},typeSpeed);}}]);return TypeWriter;}();// Init On DOM Load\ndocument.addEventListener('DOMContentLoaded',init);// Init App\nfunction init(){var txtElement=document.querySelector('.txt-type');var words=JSON.parse(txtElement.getAttribute('data-words'));var wait=txtElement.getAttribute('data-wait');// Init TypeWriter\nnew TypeWriter(txtElement,words,wait);}","map":{"version":3,"sources":["C:/Users/APK/Desktop/Web Projects/PortfolioDesignRemastered/portfolio-design/src/effects/typewrite.js"],"names":["TypeWriter","txtElement","words","wait","txt","wordIndex","parseInt","type","isDeleting","current","length","fullTxt","substring","innerHTML","typeSpeed","setTimeout","document","addEventListener","init","querySelector","JSON","parse","getAttribute"],"mappings":"8UAAA;GACMA,CAAAA,U,yBACF,oBAAYC,UAAZ,CAAwBC,KAAxB,CAA4C,IAAbC,CAAAA,IAAa,2DAAN,IAAM,kCAC1C,KAAKF,UAAL,CAAkBA,UAAlB,CACA,KAAKC,KAAL,CAAaA,KAAb,CACA,KAAKE,GAAL,CAAW,EAAX,CACA,KAAKC,SAAL,CAAiB,CAAjB,CACA,KAAKF,IAAL,CAAYG,QAAQ,CAACH,IAAD,CAAO,EAAP,CAApB,CACA,KAAKI,IAAL,GACA,KAAKC,UAAL,CAAkB,KAAlB,CACD,C,0DAEM,gBACL;AACA,GAAMC,CAAAA,OAAO,CAAG,KAAKJ,SAAL,CAAiB,KAAKH,KAAL,CAAWQ,MAA5C,CACA;AACA,GAAMC,CAAAA,OAAO,CAAG,KAAKT,KAAL,CAAWO,OAAX,CAAhB,CAEA;AACA,GAAG,KAAKD,UAAR,CAAoB,CAClB;AACA,KAAKJ,GAAL,CAAWO,OAAO,CAACC,SAAR,CAAkB,CAAlB,CAAqB,KAAKR,GAAL,CAASM,MAAT,CAAkB,CAAvC,CAAX,CACD,CAHD,IAGO,CACL;AACA,KAAKN,GAAL,CAAWO,OAAO,CAACC,SAAR,CAAkB,CAAlB,CAAqB,KAAKR,GAAL,CAASM,MAAT,CAAkB,CAAvC,CAAX,CACD,CAED;AACA,KAAKT,UAAL,CAAgBY,SAAhB,+BAAiD,KAAKT,GAAtD,YAEA;AACA,GAAIU,CAAAA,SAAS,CAAG,GAAhB,CAEA,GAAG,KAAKN,UAAR,CAAoB,CAClBM,SAAS,EAAI,CAAb,CACD,CAED;AACA,GAAG,CAAC,KAAKN,UAAN,EAAoB,KAAKJ,GAAL,GAAaO,OAApC,CAA6C,CAC3C;AACAG,SAAS,CAAG,KAAKX,IAAjB,CACA;AACA,KAAKK,UAAL,CAAkB,IAAlB,CACD,CALD,IAKO,IAAG,KAAKA,UAAL,EAAmB,KAAKJ,GAAL,GAAa,EAAnC,CAAuC,CAC5C,KAAKI,UAAL,CAAkB,KAAlB,CACA;AACA,KAAKH,SAAL,GACA;AACAS,SAAS,CAAG,GAAZ,CACD,CAEDC,UAAU,CAAC,iBAAM,CAAA,KAAI,CAACR,IAAL,EAAN,EAAD,CAAoBO,SAApB,CAAV,CACD,C,0BAIH;AACAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,CAA8CC,IAA9C,EAEA;AACA,QAASA,CAAAA,IAAT,EAAgB,CACd,GAAMjB,CAAAA,UAAU,CAAGe,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAAnB,CACA,GAAMjB,CAAAA,KAAK,CAAGkB,IAAI,CAACC,KAAL,CAAWpB,UAAU,CAACqB,YAAX,CAAwB,YAAxB,CAAX,CAAd,CACA,GAAMnB,CAAAA,IAAI,CAAGF,UAAU,CAACqB,YAAX,CAAwB,WAAxB,CAAb,CACA;AACA,GAAItB,CAAAA,UAAJ,CAAeC,UAAf,CAA2BC,KAA3B,CAAkCC,IAAlC,EACD","sourcesContent":["// ES6 Class\r\nclass TypeWriter {\r\n    constructor(txtElement, words, wait = 3000) {\r\n      this.txtElement = txtElement;\r\n      this.words = words;\r\n      this.txt = '';\r\n      this.wordIndex = 0;\r\n      this.wait = parseInt(wait, 10);\r\n      this.type();\r\n      this.isDeleting = false;\r\n    }\r\n  \r\n    type() {\r\n      // Current index of word\r\n      const current = this.wordIndex % this.words.length;\r\n      // Get full text of current word\r\n      const fullTxt = this.words[current];\r\n  \r\n      // Check if deleting\r\n      if(this.isDeleting) {\r\n        // Remove char\r\n        this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n      } else {\r\n        // Add char\r\n        this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n      }\r\n  \r\n      // Insert txt into element\r\n      this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`;\r\n  \r\n      // Initial Type Speed\r\n      let typeSpeed = 200;\r\n  \r\n      if(this.isDeleting) {\r\n        typeSpeed /= 2;\r\n      }\r\n  \r\n      // If word is complete\r\n      if(!this.isDeleting && this.txt === fullTxt) {\r\n        // Make pause at end\r\n        typeSpeed = this.wait;\r\n        // Set delete to true\r\n        this.isDeleting = true;\r\n      } else if(this.isDeleting && this.txt === '') {\r\n        this.isDeleting = false;\r\n        // Move to next word\r\n        this.wordIndex++;\r\n        // Pause before start typing\r\n        typeSpeed = 500;\r\n      }\r\n  \r\n      setTimeout(() => this.type(), typeSpeed);\r\n    }\r\n  }\r\n  \r\n  \r\n  // Init On DOM Load\r\n  document.addEventListener('DOMContentLoaded', init);\r\n  \r\n  // Init App\r\n  function init() {\r\n    const txtElement = document.querySelector('.txt-type');\r\n    const words = JSON.parse(txtElement.getAttribute('data-words'));\r\n    const wait = txtElement.getAttribute('data-wait');\r\n    // Init TypeWriter\r\n    new TypeWriter(txtElement, words, wait);\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}